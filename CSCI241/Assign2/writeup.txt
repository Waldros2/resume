1. Scott Waldron
2. With my current test files vertextest.txt and edgetest.txt, I have only encountered one problem involving my code. When using the inifinite loop to find different paths, it will successfully print the correct path the first time but afterwards it duplicates. I decided to try my hand at object orientated programming since you acknowledged that we could implement them and change the routes file. Within the text files I have provided, I have only found the one problem I mentioned above.
3. With the implementation of a vertex class, edge class and PriorityQueue class, there is some overhead involving finding the correct vertex to point to with an edge. There is a case where I iterate through the vertexes to find the correct copy and copy it and then iterate through them again to create an edge. With the implementation, I didn’t have time to correct or streamline the searching process. Also, with the implementation of my classes, I never use findAdjacentVertices as the code is done in loadEdges and I never implement checkIsAdjacent because I took the route of objects and the data is stored within the object rather than a seperate array.
4. What I found most challenging about this assignment was actually implementing the object classes. When I was creating new vertexes for my edge class, I was creating a NEW vertex with the exact same properties as the other but didn’t have the same adjacency list of the original. This provided plenty of frustration in the testing of the code. The code was good but my pointers were off.
5. I tested my code against the two files provided for us as well as what I've constructed. Not only was I able to print out all 4 options but I also was able to continually print new values with the infinite loop in Routes.java. I tested my code with multiple starts and ends. If there was no connecting route, my code correctly printed -1 as it should.

If there is anything I have missed or overlooked in this write-up, please let me know. 
Thank you.
