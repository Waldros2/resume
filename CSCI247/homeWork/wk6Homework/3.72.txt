Scott Waldron
2/9/17
3.72

Figure 3.54(a) shows the code for a function vfunct (Figure 3.43(a)). We used vfunct to illustrate the use of a frame pointer in managing variable-size stack frames. The new function aframe allocates space for local array p by calling library function alloca. This function is similar to the more commonly used function malloc, except that is allocates space on the run-time stack. The space is automatically deallocated when the executing procedure returns. 

Figure 3.54(b) shows the part of the assembly code that sets up the frame pointer and allocates space for local variables i and p. It is very similar to the corresponding code for vframe. Let us use the same notation as in Problem 3.49: The stack pointer is set to values s1 at line 4 and s2 at line 7. The start address of array p is set to value p at line 9. Extra space e2 may arise between s2 and p, and extra space e1 may arise between the end of array p and s1.

C code

1.  #include <alloca.h>
2.  
3.  long aframe(long n, long idx, long *q){
4.    long i;
5.    long **p = alloca(n * sizeof(long *));
6.    p[0] = &i;
7.    for (i = 1; i < n; i++)
8.      p[i] = q;
9.    return *p[idx];
10. }

Assembly Code

long aframe(long n, long idx, long *q)
n in %rdi, idx in %rsi, q in %rdx

1.  aframe:
2.	pushq	%rbp			#Save off the base pointer
3.	movq	%rsp, %rbp		#Move the stack pointer into the base pointer
4.	subq	$16, %rsp		#Allocate space for i (%rsp = s1)
5.	leaq	30(,%rdi,8), %rax	#30 + 8n --> %rax
6.	andq	$-16, %rax		#Round 30 + 8n to the nearest address divisible by 16.
7.	subq	%rax, %rsp		#Allocate space for array p (%rsp = s2)
8.	leaq	15(%rsp), %r8		#15 + rsp - s2
9.	andq	$-16, %r8		#Set %r8 to &p[0]

...

A. Explain, in mathematical terms, the logic in the computation of s2.

s2 needs enough space for the the array as well as being divisible by 

B. Explain, in mathematical terms, the logic in the computation of p.

C. Find values n and s1 that lead to mimimum and maximum values of s2.

D. What alignment properties does this code guarantee for the values of s2 and p?

The alignment properties that this code gurantees for the values of s2 and p is that they are divisible by 16.
