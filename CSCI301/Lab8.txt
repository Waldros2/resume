Scott Waldron
W00970369
November 15, 2016
Lab8

1. Use abstraction and the functions insert-g and seqrem to simplify the function rember. Give the simplified Scheme function implementation below. (Hint: "The Ninth Commandment")

(define rember
  (lambda (a l)
    ((insert-g seqrem) #f a l)))


2. How many arguments does the function multirember take?

Multirember takes 2 arguments. It takes an atom and a lat.


3. How many arguments does the function multirember&co take?

Multirember&co takes 3 arguments. It takes am atom, a lat, and a function col.


4. Describe how the arguments of multiremeber&co and multirember are different.

Multirember only takes 2 arguments (a and lat), while multirember&co takes 3 arguements (a lat col). Multirember&co takes the same two arguments as multirember but also takes the function col as another argument which in of itself takes two lists.


5. Provide a Scheme definition for a NFA machine with a set of four states equal to {A,B,C,D} and an alphabet of input symbols equal to {0,1}. The NFA should have a start state of A, a single accepting state D, and accept any binary strings that contain 00 or 11 as a substring.

M = (Q, Σ, δ, q, F)

Q = {A,B,C,D}
Σ = {0,1}
q = {A}
F = {D}
δ = 
_δ_|_0_|_1_
 A | B   C 
 B | D   C
 C | B   D
 D | D   D

(define final '(D))
(define transA0 '(0 B))
(define transA1 '(1 C))
(define transB0 '(0 D))
(define transB1 '(1 C))
(define transC0 '(0 B))
(define transC1 '(1 D))
(define transD0 '(0 D))
(define transD1 '(1 D))
(define transA (list A transA0 transA1))
(define transB (list B transB0 transB1))
(define transC (list C transC0 transC1))
(define transD (list D transD0 transD1))
(define term-00/11 (list final transA transB transC transD)) 
